@{
    Layout = "_UserLayout";
    ViewBag.Title = "Account";
}
@section navbar{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="admin" asp-action="">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            <span>Dashboard</span>
        </a>
    </li>
    <li class="nav-item active">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="Account">
            <i class="fas fa-user-circle"></i>
            <span> Create Account </span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="AllocationsLeave">
            <i class="fas fa-user-clock"></i>
            <span> Allocations Leave</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="EmployeeManagement">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            <span> Employee Management</span>
        </a>
    </li>
}

<style>

    label {
        width: 300px;
        display: inline-block;
        margin-top: 20px;
    }

        label.error {
            color: red;
            font-size: 12px;
            display: block;
            margin-top: 5px;
        }

    input.error, textarea.error {
        font-size: 12px;
        border: 1px solid red;
        color: red;
        width: 470px;
    }

    .error {
        color: red;
        font-size: 20px;
        position: relative;
        line-height: 1;
        width: 470px;
    }
</style>
<section>
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Data Account</h6>
        </div>
        <div class="card-body">
            <button class="btn btn-primary" type="button" data-toggle="modal" data-target="#createdAccount">
                + Created New Account
            </button><br /><br />
            <div class="table-responsive">
                <table class="table table-bordered" id="account" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>Nama</th>
                            <th>Email</th>
                            <th>Roles</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="account">
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</section>
<!-- Created Modal -->
<div class="modal fade" id="createdAccount" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="modal-title-default">Created Account</h6>
                <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">
                    <i class="fa fa-times" aria-hidden="true"></i>
                </button>
            </div>
            <div class="modal-body" id="c">
                <form class="row g-3 needs-validation" id="formValidation" method="post" novalidate>

                    <div class="col-md-12">
                        <label class="form-label" style="margin-top: -10px;">Employee</label>
                        <select class="form-control" name="employeeId" id="employeeId">
                        </select>

                    </div>
                    <div class="col-md-12">
                        <label class="form-label" style="margin-top: -10px;">Email</label>
                        <input type="text" class="form-control form-control-user" id="email" name="email" />

                    </div>
                    <div class="col-md-12">
                        <label class="form-label" style="margin-top: -10px;">Password</label>
                        <input type="password" class="form-control" name="password" id="password">

                    </div>
                    <div class="col-md-12">
                        <label class="form-label" style="margin-top: -10px;">Role</label>
                        <select class="form-control" name="txtrole" id="txtrole">
                        </select>

                    </div>
                    <div class="modal-footer">
                        <button id="btnAdd" type="submit" class="btn btn-primary">Submit</button>
                        <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- getEditModal -->
<div class="modal fade" id="getEditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="modal-title-default">Edit Account</h6>
                <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">
                    <i class="fa fa-times" aria-hidden="true"></i>
                </button>
            </div>
            <div class="modal-body" id="c">

                <input type="hidden" class="form-control" name="idAccountRole" id="idAccountRole">
                <input type="hidden" class="form-control" name="idEmployee" id="idEmployee">
                <div class="col-md-12">
                    <label for="exampleInputEmail1" class="form-label" style="margin-top: -10px;">Role</label>
                    <select class="form-control" name="roleS" id="roleS" required>
                    </select>

                </div>
                <div class="modal-footer">
                <button type="submit" name="btnEdit" data-dismiss="modal" onclick="EditAccount()" class="btn btn-primary">Submit</button>
                    <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
        $(document).ready(function () {
            TableAccount = $("#account").DataTable({
                dom: 'Bfrtip', /*'<"top"Blf>rtip',*/
                buttons: [
                    {
                        extend: 'pageLength',
                        className: 'button bg-info'
                    },
                    {
                        extend: 'copyHtml5',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        titleAttr: 'Copy',
                        className: 'button bg-primary',
                        text: '<i class="fa-regular fa-clone"></i>'
                    },
                    {
                        extend: 'excelHtml5',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        titleAttr: 'Excel',
                        className: 'button bg-success',
                        text: '<i class="fa-regular fa-file-excel"></i>'
                    },
                    {
                        extend: 'csvHtml5',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        titleAttr: 'CSV',
                        className: 'button bg-warning',
                        text: '<i class="fa-solid fa-align-left"></i>'
                    },
                    {
                        extend: 'pdfHtml5',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        },
                        titleAttr: 'Pdf',
                        className: 'button bg-danger',
                        text: '<i class="fa-regular fa-file-pdf"></i>'
                    }
                    /*'pageLength', 'copy', 'csv', 'excel', 'pdf', 'print'*/
                ],
                ajax: {
                    url: "https://localhost:7090/api/Accounts/AccountMaster",
                    dataType: "Json",
                    dataSrc: '',

                },
                "columns": [
                    {
                        "data": null,
                        "render": function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return row["fullName"] /*+ " " + row["lastName"]*/;
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return row["email"];
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return row["roles"];
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            return `<button class="btn btn-success" title="Edit" onclick="getEditModal('${row.accountRoleId}')" data-toggle="modal" data-target="#getEditModal"><i class="fa-solid fa-pen-to-square"></i></button>
                                                    <button class="btn btn-danger" title="Delete" onclick="Delete('${row.employeeId}')"><i class="fa-solid fa-trash-can"></i></button>`;
                        }
                    }
                ]

            });

        })
        $.ajax({
            url: "https://localhost:7090/api/Roles",
            type: "GET",
            dataType: "Json"
        }).done((result) => {
            let role = `<option value="" disabled selected>Please select role account</option>`;

            $.each(result, (key, val) => {
                role += `<option value="${val.id}" >${val.name}</option>`;
            })

            $("#roleS").html(role);

            $("#txtrole").html(role);
        }).fail((error) => {
            console.log(error);
        });

        $.ajax({
            url: "https://localhost:7090/api/Employees",
            type: "GET",
            dataType: "Json"
        }).done((result) => {

            let emp = `<option value="" disabled selected>Please select employee</option>`;

            $.each(result, (key, val) => {
                emp += `<option value="${val.id}" >${val.firstName + " " + val.lastName}</option>`;
            })

            $("#employeeId").html(emp);
        }).fail((error) => {
            console.log(error);
        });



        $(function () {
            $("#formValidation").validate({
                rules: {
                    employeeId: {
                        required: true
                    },
                    email: {
                        required: true,
                        email: true
                    },
                    password: {
                        required: true
                    },
                    txtrole: {
                        required: true

                    },
                },
                messages: {
                    employeeId: {
                        required: "Select user.",
                    },
                    email: {
                        required: "Enter user email.",
                        email: "xxx@xxx.xxx"
                    },
                    password: {
                        required: "Enter user password"
                    },
                    txtrole: {
                        required: "Select user role"
                    }
                }
            });
            $('#btnAdd').click(function (e) {
                e.preventDefault();
                if ($('#formValidation').valid() == true) {
                    Insert();
                }
            });
        });

        function Insert() {
            let obj = {
                employeeId: $("#employeeId").val(),
                email: $("#email").val(),
                password: $("#password").val(),
                roleId: $("#txtrole").val()
            };
            $.ajax({
                url: "https://localhost:7090/api/Accounts/Register",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(obj)
            }).done((result) => {
                swal.fire({
                    title: "Good job!",
                    text: "Data added successfully!!",
                    icon: "success"

                })
                TableAccount.ajax.reload();
            }).fail((error) => {
                // jika gagal
                swal.fire({
                    title: "Failed!",
                    text: "email or this user has been registered!!",
                    icon: "error",
                    button: "Close",
                });
            })
        }

        function Delete(id) {
            swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    //isi dari object kalian buat sesuai dengan bentuk object yang akan di post
                    $.ajax({
                        headers: { 'Content-Type': 'application/json' },
                        url: "https://localhost:7090/api/Accounts/" + id,
                        type: "delete",
                        dataType: 'json'
                    }).done((result) => {
                        swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Delete data from database',
                        }),
                            TableAccount.ajax.reload()
                    }).fire((error) => {
                        swal({
                            icon: 'error',
                            title: 'Error',
                            text: 'Failed deleting data from Database',
                        })
                    })
                }
            })
        }

        function getEditModal(id) {
            $.ajax({
                url: "https://localhost:7090/api/AccountRoles/" + id,
                dataType: "Json",
                dataSrc: ""
            }).done((result) => {
                $('#idAccountRole').val(result.id);
                $('#idEmployee').val(result.accountId);
                $('#txtrole').val(result.roleId);
                console.log(result.roleId)

            }).fail((error) => {
                console.log(error);
            });
        }
        function EditAccount() {
            var obj = {
                id: $("#idAccountRole").val(),
                accountId: $("#idEmployee").val(),
                roleId: $("#roleS").val()

            }; console.log(obj)
            $.ajax({
                url: "https://localhost:7090/api/AccountRoles",
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(obj)
            }).done((result) => {
                let timerInterval
                swal.fire({
                    title: 'Saving Data!',
                    html: 'Wait a minute <b></b> milliseconds.',
                    timer: 2000,
                    timerProgressBar: true,
                    didOpen: () => {
                        swal.showLoading()
                        const b = swal.getHtmlContainer().querySelector('b')
                        timerInterval = setInterval(() => {
                            b.textContent = swal.getTimerLeft()
                        }, 100)
                    },
                    willClose: () => {
                       clearInterval(timerInterval)
                    }
                }).then((result) => {
                    if (result.dismiss === swal.DismissReason.timer) {
                        console.log('Waiting')
                    }
                }),
        /*            $('#editEmployee').modal('hide');
        */        TableAccount.ajax.reload()

            }).fail((error) => {

                swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed Edit Account ',
                })
            })
        }
    </script>
}