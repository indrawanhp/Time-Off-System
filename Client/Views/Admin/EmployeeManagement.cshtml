@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_UserLayout";
    ViewBag.Title = "Employee Management";
    ViewBag.Id = HttpContextAccessor.HttpContext.Session.GetInt32("ID");
}
@section navbar{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="admin" asp-action="">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            <span>Dashboard</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="Account">
            <i class="fas fa-user-circle"></i>
            <span> Account </span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="AllocationsLeave">
            <i class="fas fa-user-clock"></i>
            <span> Allocations Leave</span>
        </a>
    </li>
    <li class="nav-item active">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="EmployeeManagement">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            <span> Employee Management</span>
        </a>
    </li>

    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="Admin" asp-action="JobAndDepartmentManagement">
            <i class="fas fa-fw fa-tachometer-alt"></i>
            <span> Department & Jobs Management</span>
        </a>
    </li>
}

<style>
    .error {
        font-size: 14px;
        color: red;
    }
</style>

<div class="row">
    <div class="col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h5 class="m-0 font-weight-bold text-primary text-center"> @ViewBag.Title </h5>
            </div>
            <div class="card-body">
                <ul id="tabs" class="nav nav-tabs">
                    <li class="nav-item">
                        <a href="" data-target="#employees" data-toggle="tab" class="nav-link active small text-uppercase">Employees</a>
                    </li>
                    <li class="nav-item">
                        <a href="" data-target="#management" data-toggle="tab" class="nav-link small text-uppercase">
                            Management Employees
                        </a>
                    </li>
                </ul>
                <br>
                <div id="tabsContent" class="tab-content">
                    <div id="employees" class="tab-pane fade active show">
                        <div class="row p-3 pb-0 mb-0">
                            <div class="col-md-12 px-0 mr-auto">
                                <a type="button" id="insert" value="insert" class="m-0 btn btn-primary btn-sm btn-icon-split" style="box-shadow:3px 3px #000;" data-toggle="modal" data-target="#modal-form" onclick="$('#EmployeeForm')[0].reset();">
                                    <span class="icon text-white-50">
                                        <i class="fas fa-plus"></i>
                                    </span>
                                    <span class="text">Add Employee</span>
                                </a>
                            </div>
                            <div class="table-responsive mt-3">
                                <table id="myTableEmployee" class="table align-items-center" width="100%">
                                    <thead style="font-size:14px;">
                                        <tr>
                                            <th class="text-uppercase">Id</th>
                                            <th>Name</th>
                                            <th>Address</th>
                                            <th>Phone</th>
                                            <th>Gender</th>
                                            <th>Age</th>
                                            <th>Contract length</th>
                                            <th width="10%">Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div id="management" class="tab-pane fade">
                        <div class="row p-3 pb-0 mb-0">
                            <div class="px-0 col-md-3 text-left mr-auto">
                                <a type="button" id="employee_placement" value="employee_placement" class="m-0 btn btn-primary btn-sm btn-icon-split" style="box-shadow:3px 3px #000;" data-toggle="modal" data-target="#modal-placement" onclick="$('#form-placement')[0].reset(); ModalPlacement();">
                                    <span class="icon text-white-50">
                                        <i class="fas fa-plus"></i>
                                    </span>
                                    <span class="text">Employee Placement</span>
                                </a>
                            </div>
                            <div class="table-responsive mt-3">
                                <table id="myTableManagement" class="table align-items-center" width="100%" cellspacing="0">
                                    <thead style="font-size:14px;">
                                        <tr>
                                            <th class="text-uppercase">Id</th>
                                            <th>Name</th>
                                            <th>Manager</th>
                                            <th>Job</th>
                                            <th>Department</th>
                                            <th width="10%">Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="modal-form" tabindex="-1" role="dialog" aria-labelledby="modal-default" aria-hidden="true">
    <div class="modal-dialog modal- modal-dialog-centered modal-" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="modal-title-default">Form Data</h6>
                <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">
                    <i class="fa fa-times" aria-hidden="true"></i>
                </button>
            </div>

            <div class="modal-body">
                <form id="EmployeeForm" class="needs-validation" novalidate>
                    <input type="hidden" name="employeeid" id="employeeid" />
                    <div class="form-group row">
                        <div class="col-md-6">
                            <label for="first_name" class="form-label">First Name</label>
                            <input type="text" id="first_name" name="first_name" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label for="last_name" class="form-label">Last Name</label>
                            <input type="text" id="last_name" name="last_name" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-6">
                            <label for="birth_date" class="form-label">Birth Date</label>
                            <input type="date" name="birth_date" id="birth_date" class="form-control date" required />
                        </div>
                        <div class="col-md-6">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="text" name="phone" id="phone" class="form-control" required />
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-6">
                            <label for="hire_date" class="form-label">Start Working Date</label>
                            <input type="date" name="hire_date" id="hire_date" class="form-control" required>
                        </div>
                        <div class="col-md-6">
                            <label for="release_date" class="form-label">End Working Date</label>
                            <input type="date" name="release_date" id="release_date" class="form-control" required>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12">
                            <label for="gender" class="form-label">Gender</label>
                            <select id="gender" name="gender" class="form-control" required>
                                <option selected disabled hidden value="">Select Gender</option>
                                <option value="0">Male</option>
                                <option value="1">Female</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12">
                            <label for="address" class="form-label">Address</label>
                            <textarea name="address" id="address" cols="50" rows="3" class="form-control" required></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="save" type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal Placement-->
<div class="modal fade" id="modal-placement" role="dialog" aria-labelledby="modal-default" aria-hidden="true">
    <div class="modal-dialog modal- modal-dialog-centered modal-" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title" id="modal-title-default">Form Placement</h6>
                <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">
                    <i class="fa fa-times" aria-hidden="true"></i>
                </button>
            </div>

            <div class="modal-body">
                <form id="form-placement" class="needs-validation" novalidate>
                    <input type="hidden" id="flag" />
                    <input type="hidden" id="managementplacementid" />
                    <div class="form-group row">
                        <div class="col-md-12 mb-0">
                            <label for="selectemployee" class="form-label">Employee Name</label>
                            <select class="form-control" id="selectemployee" name="selectemployee" style="width: 100%">
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12 mb-0">
                            <label for="selectmanager" class="form-label">Manager Name</label>
                            <select class="form-control" id="selectmanager" name="selectmanager" style="width: 100%">
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12 mb-0">
                            <label for="selectjob" class="form-label">Job Name</label>
                            <select class="form-control" id="selectjob" name="selectjob" style="width: 100%">
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-12">
                            <label for="selectdepartment" class="form-label">Department Name</label>
                            <select class="form-control" id="selectdepartment" name="selectdepartment" style="width: 100%">
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-link ml-auto" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{
    @*Employee Crud*@
    <script>
        console.log("Employee Management")

        let TableEmployee = $('#myTableEmployee').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pageLength',
                    className: 'btn btn-sm text-light bg-info',
                    attr: {
                        style: "box-shadow: 3px 3px #000;"
                    }
                },
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6]
                    },
                    titleAttr: 'Excel',
                    className: 'btn mx-1 btn-sm btn-success text-light bg-success',
                    text: '<i class="fas fa-solid fa-file-excel"></i>',
                    attr: {
                        style: "box-shadow: 3px 3px #000;"
                    }
                },
                {
                    extend: 'pdfHtml5',
                    customize: function (doc) {
                        doc.content[1].table.widths =
                            Array(doc.content[1].table.body[0].length + 1).join('*').split('');
                    },
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4, 5, 6]
                    },
                    titleAttr: 'Pdf',
                    className: 'btn btn-sm btn-danger',
                    text: '<i class="fa-regular fa-file-pdf"></i>',
                    attr: {
                        style: "box-shadow: 3px 3px #000;"
                    }
                }
            ],
            initComplete: () => {
                $('.dt-button').removeClass('dt-button buttons-excel buttons-html5');
                $('.buttons-pdf').removeClass('buttons-pdf');

            },
            ajax: {
                type: "GET",
                url: "../Admin/GetAll",
                dataType: "Json",
                dataSrc: ""
            },
            columns: [
                {
                    "render": (data, type, row, meta) => {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: ["firstName", "lastName"],
                    render: (data, type, row) => {
                        return `<p>${row.firstName} ${row.lastName}</p>`;
                    }
                },
                {
                    data: "address",
                    render: (data) => {
                        return `<p>${data}</p>`;
                    }
                },
                {
                    data: "phone",
                    render: (data) => {
                        return `<p>${data}</p>`;
                    }
                },
                {
                    data: "gender",
                    render: (data) => {
                        return data == 0
                            ? `<p>Male</p>`
                            : `<p>Female</p>`;
                    }
                },
                {
                    data: "birthDate",
                    render: (data) => {
                        return `<p>${Age(data)}</p>`;
                    }
                },
                {
                    data: ["hireDate", "releaseDate"],
                    render: (data, type, row) => {
                        const hireDate = new Date(row.hireDate);
                        const releaseDate = new Date(row.releaseDate);
                        const contractLengthInMilliseconds = releaseDate - hireDate;
                        const contractLengthInDays = contractLengthInMilliseconds / (1000 * 60 * 60 * 24);
                        const years = Math.floor(contractLengthInDays / 365.25);
                        const days = Math.floor(contractLengthInDays % 365.25);
                        return `<p>${years} years ${days} days</p>`;
                    }
                },
                {
                    data: "id",
                    render: (data) => {
                        return `<div class="row"><a type="button" data-toggle="modal" data-target="#modal-form" onclick="Edit(${data})" class="btn btn-sm btn-success" style="box-shadow:3px 3px #000;" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fas fa-edit"></i></a> <a type="button" onclick="Delete(${data})" class="ml-2 btn btn-danger btn-sm" style="box-shadow:3px 3px #000;" data-toggle="tooltip" data-placement="top" title="Delete"><i class="fas fa-trash"></i></a></div>`;
                    }
                }
            ]
        });

        $(document).ready(function () {
            $('#EmployeeForm').validate({
                rules: {
                    first_name: {
                        required: true
                    },
                    last_name: {
                        required: true
                    },
                    birthDate: {
                        required: true
                    },
                    address: {
                        required: true
                    },
                    hireDate: {
                        required: true
                    },
                    releaseDate: {
                        required: true
                    },
                    phone: {
                        required: true
                    },
                    gender: {
                        required: true
                    }
                },
                messages: {
                    first_name: {
                        required: "First Name is Required."
                    },
                    last_name: {
                        required: "Last Name is Required."
                    },
                    birthDate: {
                        required: "Birth Date is Required."
                    },
                    address: {
                        required: "Address is Required"
                    },
                    hireDate: {
                        required: "Hire Date is Required"
                    },
                    releaseDate: {
                        required: "Release Date is Required"
                    },
                    phone: {
                        required: "Phone Number is Required."
                    },
                    gender: {
                        required: "Gender is Required."
                    }
                },
                submitHandler: () => {
                    var Id = $('#employeeid').val();
                    if (Id == "") {
                        Insert();
                    } else {
                        Update();
                    }
                },
                errorElement: "em",
                errorPlacement: function (error, element) {
                    error.addClass("invalid-feedback mt-2");
                    error.appendTo(element.parent());
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass("is-invalid").removeClass("is-valid");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).addClass("is-valid").removeClass("is-invalid");
                }
            });
        });

        const Age = (date) => {
            const birthDate = new Date(date);
            const today = new Date();
            let age = today.getFullYear() - birthDate.getFullYear();
            const month = today.getMonth() - birthDate.getMonth();
            if (month < 0 || (month === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        }

        const Insert = () => {
            var employee = {
                firstName: $('#first_name').val(),
                lastName: $('#last_name').val(),
                birthDate: $('#birth_date').val(),
                address: $('#address').val(),
                hireDate: $('#hire_date').val(),
                releaseDate: $('#release_date').val(),
                phone: $('#phone').val(),
                gender: parseInt($('#gender').val()),
                age: Age($('#birth_date').val())
            }
            $.ajax({
                url: "../Admin/Post",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(employee),
            }).done((result) => {
                $("#modal-form").modal("hide");
                Swal.fire({
                    text: 'New Employee Created!',
                    icon: 'success',
                    timer: 5000,
                    timerProgressBar: true
                });
                TableEmployee.ajax.reload()
            }).fail((error) => {
                $("#modal-form").modal("hide");
                Swal.fire({
                    text: 'Error Creating Employee!',
                    icon: 'error',
                    timer: 5000,
                    timerProgressBar: true
                });
            })
        };

        const Update = () => {
            var employee = {
                id: parseInt($('#employeeid').val()),
                firstName: $('#first_name').val(),
                lastName: $('#last_name').val(),
                birthDate: $('#birth_date').val(),
                address: $('#address').val(),
                hireDate: $('#hire_date').val(),
                releaseDate: $('#release_date').val(),
                phone: $('#phone').val(),
                gender: parseInt($('#gender').val()),
                age: Age($('#birth_date').val())
            }
            $.ajax({
                url: "../Admin/Put",
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(employee),
            }).done((result) => {
                $("#modal-form").modal("hide");
                Swal.fire({
                    text: 'Employee has been Updated!',
                    icon: 'success',
                    timer: 5000,
                    timerProgressBar: true
                });
                TableEmployee.ajax.reload()
            }).fail((error) => {
                console.log("failed update");
                $("#modal-form").modal("hide");
                Swal.fire({
                    text: 'Error Updating Employee!',
                    icon: 'error',
                    timer: 5000,
                    timerProgressBar: true
                });
            })
        }

        const Edit = (id) => {
            $.ajax({
                type: "GET",
                url: "../Admin/Get/" + id,
                success: (data) => {
                    $('#employeeid').val(data.id);
                    $('#first_name').val(data.firstName);
                    $('#last_name').val(data.lastName);
                    birthdate = (data.birthDate).substring(0, 10);
                    $('#birth_date').val(birthdate);
                    $('#address').val(data.address);
                    hiredate = (data.hireDate).substring(0, 10);
                    $('#hire_date').val(hiredate);
                    releasedate = (data.releaseDate).substring(0, 10);
                    $('#release_date').val(releasedate);
                    $('#phone').val(data.phone);
                    $('#gender').val(data.gender);
                }
            })
        };

        const Delete = (id) => {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You wont able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'DELETE',
                        url: `../Admin/Delete/${id}`,
                        success: () => {
                            Swal.fire(
                                'Deleted!',
                                'Employee has been deleted.',
                                'success'
                            )
                            TableEmployee.ajax.reload()
                        },
                        error: () => {
                            Swal.fire(
                                'Failed!',
                                'Error deleting employee.',
                                'error'
                            )
                        }
                    })
                }
            })
        }
    </script>

    @*Employees Management*@
    <script>
        let tableManagement = $('#myTableManagement').DataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pageLength',
                    className: 'btn btn-sm text-light bg-info',
                    attr: {
                        style: "box-shadow: 3px 3px #000;"
                    }
                },
                {
                    extend: 'excelHtml5',
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    },
                    titleAttr: 'Excel',
                    className: 'btn mx-1 btn-sm btn-success text-light bg-success',
                    text: '<i class="fas fa-solid fa-file-excel"></i>',
                    attr: {
                        style: "box-shadow: 3px 3px #000;"
                    }
                },
                {
                    extend: 'pdfHtml5',
                    customize: function (doc) {
                        doc.content[1].table.widths =
                            Array(doc.content[1].table.body[0].length + 1).join('*').split('');
                    },
                    exportOptions: {
                        columns: [0, 1, 2, 3, 4]
                    },
                    titleAttr: 'Pdf',
                    className: 'btn btn-sm btn-danger',
                    text: '<i class="fa-regular fa-file-pdf"></i>',
                    attr: {
                        style: "box-shadow: 3px 3px #000;"
                    }
                }
            ],
            initComplete: () => {
                $('.dt-button').removeClass('dt-button buttons-excel buttons-html5');
                $('.buttons-pdf').removeClass('buttons-pdf');

            },
            ajax: {
                type: "GET",
                url: "https://localhost:7090/api/Employees/MasterEmployee",
                dataType: "Json",
                dataSrc: ""
            },
            columns: [
                {
                    "render": (data, type, row, meta) => {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                {
                    data: "name",
                    render: (data) => {
                        return `<p>${data}</p>`;
                    }
                },
                {
                    data: "managerName",
                    render: (data) => {
                        return `<p>${data}</p>`;
                    }
                },
                {
                    data: "job",
                    render: (data) => {
                        return `<p>${data}</p>`;
                    }

                },
                {
                    data: "department",
                    render: (data) => {
                        return `<p>${data}</p>`;
                    }
                },
                {
                    data: ["employeeId", "placementId"],
                    render: (data, type, row) => {
                        return `<a type="button" data-toggle="modal" data-target="#modal-placement" onclick="EditManagement(${row.employeeId},${row.placementId})" class="px-2 btn btn-sm btn-success" style="box-shadow:3px 3px #000;" data-toggle="tooltip" data-placement="top" title="Edit"><i class="fas fa-edit"></i></a>`;
                    },
                    className: "text-center"
                }
            ]
        })

        $(document).ready(function () {


            $.ajax({
                url: "https://localhost:7090/api/Employees/GetNameManager",
                type: "GET",
            }).done((result) => {
                let options = "";
                for (let i = 0; i < result.length; i++) {
                    options += `<option value="${result[i].idManager}">${result[i].managerName}</option>`
                }
                $('#selectmanager').html(`<option value="" selected hidden>Select Manager</option>` + options);
            })

            $.ajax({
                url: "https://localhost:7090/api/Jobs",
                type: "GET",
            }).done((result) => {
                let options = "";
                for (let i = 0; i < result.length; i++) {
                    options += `<option value="${result[i].id}">${result[i].name}</option>`
                }
                $('#selectjob').html(`<option value="" selected hidden>Select Job</option>` + options);
            })

            $.ajax({
                url: "https://localhost:7090/api/Departments",
                type: "GET",
            }).done((result) => {
                let options = "";
                for (let i = 0; i < result.length; i++) {
                    options += `<option value="${result[i].id}">${result[i].name}</option>`
                }
                $('#selectdepartment').html(`<option value="" selected hidden>Select Department</option>` + options);
            })

            $('#selectmanager').select2({
                width: 'resolve',
                placeholder: "Select a manager"
            });
            $('#selectjob').select2({
                width: 'resolve',
                placeholder: "Select a job"
            });
            $('#selectdepartment').select2({
                width: 'resolve',
                placeholder: "Select a department"
            });
        })

        const ModalPlacement = () => {
            $.ajax({
                url: "../Admin/GetAll",
                type: "GET",
            }).done((result) => {
                let options = "";
                for (let i = 0; i < result.length; i++) {
                    options += `<option value="${result[i].id}">${result[i].firstName} ${result[i].lastName}</option>`
                }
                $('#selectemployee').html(`<option value="" selected hidden>Select Employee</option>` + options);
            })

            $('#selectemployee').select2({
                width: 'resolve',
                placeholder: "Select a employee"
            });
        }

        $(document).ready(function () {
            $('#form-placement').validate({
                rules: {
                    selectemployee: {
                        required: true
                    },
                    selectjob: {
                        required: true
                    },
                    selectdepartment: {
                        required: true
                    }
                },
                messages: {
                    selectemployee: {
                        required: "Employee is Required."
                    },
                    selectjob: {
                        required: "Job is Required."
                    },
                    selectdepartment: {
                        required: "Department is Required"
                    },
                },
                submitHandler: () => {
                    var flag = $('#flag').val();
                    if (flag == "") {
                        console.log("Add");
                        UpdateManager();
                        JobPlacement();
                    } else {
                        console.log("Update");
                        UpdateManager();
                        UpdateJobPlacement()
                    }
                },
                errorElement: "em",
                errorPlacement: function (error, element) {
                    error.addClass("invalid-feedback mt-2");
                    error.appendTo(element.parent());
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass("is-invalid").removeClass("is-valid");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).addClass("is-valid").removeClass("is-invalid");
                }
            });
        });

        $('#form-placement').submit((event) => {
            event.preventDefault();
            
        })

        const UpdateManager = () => {
            $.ajax({
                url: "../Admin/Get/" + $('#selectemployee').val(),
                type: "GET"
            }).done((result) => {
                result.managerId = parseInt($('#selectmanager').val())

                $.ajax({
                    url: "../Admin/Put",
                    type: "PUT",
                    contentType: "application/json",
                    data: JSON.stringify(result),
                }).done((result) => {
                    $('#modal-placement').modal('hide');
                    tableManagement.ajax.reload()
                }).fail((error) => {
                    console.log("gagal update manager")
                })
            })
        }

        const JobPlacement = () => {
            var placement = {
                employeeId: $('#selectemployee').val(),
                departmentId: $('#selectdepartment').val(),
                jobId: $('#selectjob').val()
            };
            $.ajax({
                url: "https://localhost:7090/api/JobPlacements",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(placement),
            }).done((result) => {
                $('#modal-placement').modal('hide');
                Swal.fire({
                    text: 'Employee has been Updated!',
                    icon: 'success',
                    timer: 5000,
                    timerProgressBar: true
                });
                tableManagement.ajax.reload()
            }).fail((error) => {
                $('#modal-placement').modal('hide');
                Swal.fire({
                    text: 'Error Updating Employee!',
                    icon: 'error',
                    timer: 5000,
                    timerProgressBar: true
                });
            })
        }

        const UpdateJobPlacement = () => {
            var placement = {
                id: $('#managementplacementid').val(),
                employeeId: $('#selectemployee').val(),
                jobId: $('#selectjob').val(),
                departmentId: $('#selectdepartment').val(),
            }
            $.ajax({
                url: "https://localhost:7090/api/JobPlacements",
                type: "PUT",
                contentType: "application/json",
                data: JSON.stringify(placement),
            }).done((result) => {
                $('#modal-placement').modal('hide');
                Swal.fire({
                    text: 'Employee has been Updated!',
                    icon: 'success',
                    timer: 5000,
                    timerProgressBar: true
                });
                tableManagement.ajax.reload()
            }).fail((error) => {
                $('#modal-placement').modal('hide');
                Swal.fire({
                    text: 'Error Updating Employee!',
                    icon: 'error',
                    timer: 5000,
                    timerProgressBar: true
                });
            })
        }

        const EditManagement = (employeeId, placementId) => {
            console.log(employeeId, placementId);
            $('#flag').val("Update");
            $('#managementplacementid').val(placementId);

            $.ajax({
                url: "../Admin/Get/" + employeeId,
                type: "GET"
            }).done((result) => {
                $('#selectemployee').html(`<option value="${result.id}" selected>${result.firstName} ${result.lastName}</option>`)

                $.ajax({
                    url: "../Admin/Get/" + result.managerId,
                    type: "GET"
                }).done((result) => {
                    var select = $("#selectmanager");
                    var option = $("<option>", {
                        value: result.id,
                        text: result.firstName + " " + result.lastName
                    });
                    if (select.find("option[value='" + option.val() + "']").length) {
                        return;
                    }
                    select.append(option);
                })
            })
        }

    </script>
}